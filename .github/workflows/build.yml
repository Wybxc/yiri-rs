name: Build

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            container: quay.io/pypa/manylinux_2_28_x86_64
          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl
            container:
          - os: macos-latest
            target: x86_64-apple-darwin
            container:
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            container:
    name: ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    container: ${{ matrix.container }}
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: nightly
          targets: ${{ matrix.target }}

      - name: Install musl
        if: matrix.target == 'x86_64-unknown-linux-musl'
        run: |
          sudo apt-get update
          sudo apt-get install musl-tools -y

      - name: Build
        run: cargo build --release --target ${{ matrix.target }}

      - name: Strip & Rename (Unix)
        if: matrix.os != 'windows-latest'
        run: |
          strip target/${{ matrix.target }}/release/yiri-rs
          mv target/${{ matrix.target }}/release/yiri-rs target/yiri-rs-${{ matrix.target }}

      - name: Rename (Windows)
        if: matrix.target == 'x86_64-pc-windows-msvc'
        run: |
          mv target/${{ matrix.target }}/release/yiri-rs.exe target/yiri-rs-${{ matrix.target }}.exe

      - name: Upload
        uses: actions/upload-artifact@v3
        with:
          name: yiri-rs-${{ matrix.target }}
          path: target/yiri-rs-${{ matrix.target }}*

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/download-artifact@v3
        with:
          path: target/release
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            target/release/yiri-rs-amd64
